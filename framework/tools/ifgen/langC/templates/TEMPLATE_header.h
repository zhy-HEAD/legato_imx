{#-
 #  Jinja2 template for generating C prototypes for Legato APIs.
 #
 #  Note: C/C++ comments apply to the generated code.  For example this template itself is not
 #  autogenerated, but the comment is copied verbatim into the generated file when the template is
 #  expanded.
 #
 #  Copyright (C) Sierra Wireless Inc.
 #}
/*
 * ====================== WARNING ======================
 *
 * THE CONTENTS OF THIS FILE HAVE BEEN AUTO-GENERATED.
 * DO NOT MODIFY IN ANY WAY.
 *
 * ====================== WARNING ======================
 */
{% block HeaderComments %}
{% endblock %}
#ifndef {{apiName|upper}}_INTERFACE_H_INCLUDE_GUARD
#define {{apiName|upper}}_INTERFACE_H_INCLUDE_GUARD


#include "legato.h"
{%- block InterfaceHeader %}{%- if imports %}

// Interface specific includes
{%- for import in imports %}
#include "{{import}}.h"
{%- endfor %}
{%- endif %}
{%- endblock %}

// Internal includes for this interface
#include "{{apiBaseName}}_common.h"
{% block GenericFunctions %}{% endblock %}
{% for define in definitions %}
{%- if apiBaseName != apiName %}

//--------------------------------------------------------------------------------------------------
{{define.comment|FormatHeaderComment}}
//--------------------------------------------------------------------------------------------------
#define {{apiName|upper}}_{{define.name}} {{apiBaseName|upper}}_{{define.name}}
{%- endif %}
{%- endfor %}
{%- for type in types %}

//--------------------------------------------------------------------------------------------------
{{type.comment|FormatHeaderComment}}
//--------------------------------------------------------------------------------------------------
{%- if apiBaseName != apiName %}
{%- if type is ReferenceType %}
typedef {{apiBaseName}}_{{type.name}}Ref_t {{type|FormatType}};
{%- elif type is HandlerType %}
typedef {{apiBaseName}}_{{type.name}}Func_t {{type|FormatType}};
{%- else %}
typedef {{apiBaseName}}_{{type.name}}_t {{type|FormatType}};
{%- endif %}
{%- if type is EnumType or type is BitMaskType %}
    {%- for element in type.elements %}
#define {{apiName|upper}}_{{element.name}}   {{apiBaseName|upper}}_{{element.name}}
    {%- if element.comments %}        ///<{{element.comments|join("\n///<")|indent(8)}}{%endif%}
    {%- endfor %}
{%- endif %}
{%- endif %}
{% endfor %}
{%- for function in functions %}{% block FunctionDeclaration scoped %}

//--------------------------------------------------------------------------------------------------
{{function.comment|FormatHeaderComment}}
//--------------------------------------------------------------------------------------------------
{{function.returnType|FormatType}} {{apiName}}_{{function.name}}
(
    {%- for parameter in function|CAPIParameters %}
    {{parameter|FormatParameter}}{% if not loop.last %},{% endif %}
        ///< [{{parameter.direction|FormatDirection}}]
             {{-parameter.comments|join("\n///<")|indent(8)}}
    {%-else%}
    void
    {%-endfor%}
);
{%- endblock %}{%- endfor %}

#endif // {{apiName|upper}}_INTERFACE_H_INCLUDE_GUARD
