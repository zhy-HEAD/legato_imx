/** @page basicBuildToolchain Install the Toolchain

Toolchains are a collection of tools, libraries and programs that are needed to build a system for
a target.  Each module will have a different toolchain as the libraries and tools that are used are
often dependent on the kernel/os version.  The toolchain also includes all the kernel headers that
are needed to build kernel objects and libraries used to enable additional hardware on your target.

While the toolchains are target/module specific we walk through installing toolchains as well as
providing best practices to manage the toolchains as they are needed to build kernel modules,
applications, and the runtime environment for your target.  The Legato Application Framework does
not maintain any of the toolchains but does test toolchains to ensure that they work with the
Application Framework.

@warning When switching between different models of targets or upgrading your firmware/OS
verify that you have the matching toolchain installed and it is the right version of toolchain that
you need to build for that target.

@section basicBuildToolchain_basicBuildToolchainSWI SWI WP Series Device Toolchain

Make sure that all old toolchain installers have been archived or deleted before you download a new
toolchain.

@verbatim
$ cd ~/Downloads
$ mkdir old_toolchains
$ mv poky* old_toolchains
@endverbatim


Each target maintains it's own unique toolchain as the toolchain needs to be built as part of the OS
distribution.  Visit [source.sierrawireless.com](https://source.sierrawireless.com/) to download and
install the toolchain for your target.

| Module         | Download Site                                                                                                                         |
| -------------- | ------------------------------------------------------------------------------------------------------------------------------------- |
| WPX5XX         | [WPX5XX Firmware Download Page](https://source.sierrawireless.com/resources/airprime/software/wpx5xx/wpx5xx-firmware-latest-release-components/) |
| WP76XX         | [WP76XX Firmware Download Page](https://source.sierrawireless.com/resources/airprime/software/wp76xx/wp76xx-firmware-latest-release-components/) |
| WP77XX         | [WP77XX Firmware Download Page](https://source.sierrawireless.com/resources/airprime/software/wp77xx/wp77xx-firmware-latest-release-components/) |
| AR Modules     | See your FAE to download and install the toolchain for your module                                                                    |

After downloading the toolchain installer copy it into your workspace for safe keeping:
@verbatim
$mv <toolchain> ~/workspace/firmware/<module>/.
@endverbatim

You may also need to grant execute rights before the toolchain installer can be run:
@verbatim
$ cd ~/workspace/firmware/<module>/
$ chmod +x <toolchain>
@endverbatim

Upon running the toolchain installer you will be prompted where you want to install the tools.

Enter: @verbatim /opt/swi/y17-ext-<legato version> @endverbatim

When prompted, answer "Y" to proceed with the install.

@verbatim
$ ./poky-swi-ext-glibc-x86_64-meta-toolchain-swi-armv7a-neon-toolchain-swi-SWI9X07Y_02.18.06.00.sh
Poky (Yocto Project Reference Distro) SDK installer version 2.2.3
=================================================================
Enter target directory for SDK (default: /opt/swi/SWI9X07Y_02.18.06.00):
Extracting SDK...done
Setting it up...done
SDK has been successfully set up and is ready to be used.
Each time you wish to use the SDK in a new shell session, you need to source the environment setup script e.g.
 $ . /opt/swi/SWI9X07Y_02.18.06.00/environment-setup-armv7a-neon-poky-linux-gnueabi
@endverbatim

@warning If you need to move the location of the toolchain once it's installed you must uninstall
and reinstall the toolchain. Moving the files after installation will break the toolchain.

@subsection basicBuildLegato_ToolchainSWI_KO Run Kernel Build Scripts

Installing the toolchain als runs the kernel build scripts, but because this creates a hard link to
the header files if you need to change/update the toolchain or switch to a different module you
must manually run the kernel build setup script again.

Default path:
WPX5XX: @c /opt/swi/<toolchainVersion>/sysroots/x86_64-pokysdk-linux/usr/bin/arm-poky-linux-gnueabi
WP76XX and WP77XX: @c /opt/swi/<toolchainVersion>/sysroots/x86_64-pokysdk-linux/usr/bin/arm-poky-linux-gnueabi

Example for the WP76XX, WP77XX (Release 10):
@verbatim
$ export PATH=/opt/swi/SWI9X07Y_02.18.06.00/sysroots/x86_64-pokysdk-linux/usr/bin/arm-poky-linux-gnueabi:$PATH
@endverbatim


Change directory to: @c <toolchain path>/sysroots/armv7a-vfp-neon-poky-linux-gnueabi/usr/src/kernel.
The module path for the WPX5XX is @c /opt/swi/y17-ext and the default module path for the
WP76XX/WP77XX is @c /opt/swi/y22-ext.

Example for WP76XX, WP77XX:
@verbatim
$ cd /opt/swi/SWI9X07Y_02.18.06.00/sysroots/armv7a-vfp-neon-poky-linux-gnueabi/usr/src/kernel
@endverbatim


Take ownership of the files in the directory and run make scripts, when done return ownership to the
root user.

@note The root user does not know the path to the Legato compiler so file ownership must be
temporarily transferred to yourself so that the scripts build properly and then given back when the
script is completed.

@verbatim
$ sudo chown -R $USER .
$ ARCH=arm CROSS_COMPILE=arm-poky-linux-gnueabi- make scripts
$ sudo chown -R root .
@endverbatim

You are now ready to @ref basicBuildMake "build and configure" the Legato Runtime Environment
for your target device.

@section basicBuildToolchain_RaspbToolChain Raspberry Pi Toolchain

If you are building Legato AF directly on a Raspberry Pi then no toolchain is needed and you only
need to install @b native @b [GCC](https://gcc.gnu.org/install/).  If you are cross-compiling
the Legato AF on a Linux machine for use on a Raspberry Pi Device, then you will need to install
Raspberry Pi's toolchain.

Raspberry Pi platforms (clone from the GitHub repo):
@verbatim
git clone https://github.com/raspberrypi/tools
@endverbatim

Copy the @c /tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian directory to a shared
location on your Linux Development Host.

Add @c /tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin to your $PATH
@verbatim
export PATH=$PATH:${PWD}/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin
@endverbatim

@note The 64bit Raspberry Pi toolchain is located:
@c /tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64

You are now ready to @ref basicBuildMake "build and configure" the Legato Runtime Environment
for your target device.

Copyright (C) Sierra Wireless Inc.

**/
