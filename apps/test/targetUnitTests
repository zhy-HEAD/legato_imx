#!/bin/bash

TARGET_ADDR=$1
TARGET_TYPE=${2:-ar7}

# This function is exported to the environment so all scripts started from here can use it
# to find the test.shlib (so we can move it without having to update all the scripts, for e.g.)
LoadTestLib(){
    . $LEGATO_ROOT/apps/test/framework/test.shlib
    # Throwing in a timestamp so we can see who's hogging the UUT
    echo "========== Begin Test =========="
    date
}
export -f LoadTestLib

ORIG_DIR=$PWD
SCRIPT_DIR=$(readlink -f $(dirname ${BASH_SOURCE[0]}))

function RunTest()
{
    echo "################################# $1"
    TEST_FILE_DIR=$(dirname $1)
    TEST_FILE_NAME=$(basename $1)

    # Go to the directory of the test file.
    cd $SCRIPT_DIR/$TEST_FILE_DIR

    # Check that test is an executable file (and by implication, exists)
    if ! [[ -x ./$TEST_FILE_NAME ]]; then
        echo "Test $1 is not an executable file"
        exit 2
    fi

    # Run the test.
    ./$TEST_FILE_NAME $TARGET_ADDR $TARGET_TYPE 2>&1 | tee /tmp/test.out

    # Check the return code of the unit test.
    RETVAL=${PIPESTATUS[0]}
    if [ $RETVAL -ne 0 ]; then
        echo -e $COLOR_ERROR "Test '$TEST_FILE_NAME' Failed!" $COLOR_RESET
        exit $RETVAL
    fi
}

# Run tests.
RunTest framework/random/randTest.sh
#RunTest framework/supervisor/supervisorTest.sh
#RunTest framework/watchdog/watchdogTest.sh
RunTest framework/configTree/configTargetTests.sh
RunTest framework/smackAPI/smackApiTest.sh ## OK
RunTest framework/imaSmack/imaSmackTest.sh
#RunTest framework/smack/smackTest.sh ## Error assert of fileServer
#RunTest framework/sandboxLimits/limitsTest.sh ## Error
#RunTest framework/updateDaemon/updateDaemonTest.sh ## Target reboots on app install
RunTest framework/installStatus/installStatusTest.sh ## OK
#RunTest framework/inspect/inspectTest.sh ## ~OK, flaky test
RunTest framework/appInfo/appInfoTest.sh ## OK
RunTest framework/appFallBack/appFallBackTest.sh ## OK but corrupt .ar7 package should be generated on the fly (and is not a update package)
RunTest framework/secStore/secStoreTest.sh ## OK
#RunTest framework/sbhelper/sbHelperTest.sh ## Error 'Could not open /dev/urandom.  Permission denied.''

cd $ORIG_DIR
