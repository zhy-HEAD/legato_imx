//--------------------------------------------------------------------------------------------------
/**
 * @page c_riPin Ring Indicator Signal
 *
 * @ref le_riPin_interface.h "API Reference"
 *
 * <HR>
 *
 * The Ring Indicator pin is used to allow the module to wake up a host device.
 *
 * @section c_riPin_binding IPC interfaces binding
 *
 * All the functions of this API are provided by the @b modemService app.
 *
 * Here's a code sample binding to modem services:
 * @verbatim
   bindings:
   {
      clientExe.clientComponent.le_riPin -> modemService.le_riPin
   }
   @endverbatim
 *
 * @section c_riPin_usage Ring Indication signal
 *
 *
 * The RING pin can be configured to notify a host device with different timing of pulse signals for
 * different module activities.
 *
 * - le_riPin_AmIOwnerOfRingSignal() function checks whether the application core is the current
 *   owner of the Ring Indicator signal.
 * - le_riPin_TakeRingSignal() function takes control of the Ring Indicator signal.
 * - le_riPin_ReleaseRingSignal() function releases control of the Ring Indicator signal.
 *
 * - le_riPin_PulseRingSignal() function sets the ring signal high for configurable duration of time
 *   before lowering it.
 *
 * <HR>
 * Copyright (C) Sierra Wireless Inc.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * @file le_riPin_interface.h
 *
 * Legato @ref c_riPin include file.
 *
 * Copyright (C) Sierra Wireless Inc.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * Check whether the application core is the current owner of the Ring Indicator signal.
 *
 * @return
 *      - LE_OK              The function succeeded.
 *      - LE_FAULT           The function failed.
 *      - LE_BAD_PARAMETER   Bad input parameter.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t AmIOwnerOfRingSignal
(
    bool amIOwner OUT ///< true when application core is the owner of the Ring Indicator signal,
                      ///  false when modem core is the owner of the Ring Indicator signal.
);

//--------------------------------------------------------------------------------------------------
/**
 * Take control of the Ring Indicator signal.
 *
 * @return
 *      - LE_OK           The function succeeded.
 *      - LE_FAULT        The function failed.
 *      - LE_UNSUPPORTED  The platform does not support this operation.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t TakeRingSignal
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Release control of the Ring Indicator signal.
 *
 * @return
 *      - LE_OK           The function succeeded.
 *      - LE_FAULT        The function failed.
 *      - LE_UNSUPPORTED  The platform does not support this operation.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t ReleaseRingSignal
(
);

//--------------------------------------------------------------------------------------------------
/**
 * Set the Ring Indicator signal to high for configurable duration of time before lowering it.
 *
 */
//--------------------------------------------------------------------------------------------------
FUNCTION PulseRingSignal
(
    uint32   duration    IN ///< [IN] Duration in ms
);
